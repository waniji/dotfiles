snippet script
prev_word   '^'
    #!/usr/bin/env perl

    use strict;
    use warnings;

snippet package
prev_word   '^'
    package `substitute(substitute(expand('%:r'), '.*lib[\\/]', '', 'g'), '[\\/]', '::', 'g')`;

    use strict;
    use warnings;

    ${0}

    1;

snippet new
prev_word   '^'
    sub new {
        my ($class) = @_;
        bless {}, $class;
    }

snippet sub
prev_word   '^'
    sub ${1:subroutine} {
    }

snippet method
prev_word   '^'
    sub ${1:method} {
        my ($self) = @_;
    }

snippet if
    if ( ${1:condition} ) {
    }

snippet finout
prev_word   '^'
    use Getopt::Long qw(:config posix_default no_ignore_case gnu_compat);

    my $infile;
    my $outfile;

    GetOptions( 'infile=s', \$infile, 'outfile=s', \$outfile );
    open (INFILE, "<", $infile) or die "$!";
    open (OUTFILE, ">", $outfile) or die "$!";

    while( my $line = <INFILE>) {

        chomp($line);

        print OUTFILE "\n";
    }

    close(INFILE);
    close(OUTFILE);

snippet dumper
    use Data::Dumper; warn Dumper(${1:code});

